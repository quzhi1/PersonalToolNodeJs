extends layout

block content
    a(href='/') 主页
    h1 交互中国历史地图
    br
    p#yearsJson(hidden='') #{yearsJson}

    // Map renderer
    .img-magnifier-container
        img#map(class ='map')
    br

    // Slide bar
    div#slider-bar

    // Year renderer
    p
        p#amount
        div#output

    br
    br
    p 图片源：布哈林的历史地图。
    p 布哈林的主页：#[a(href="http://www.acfun.cn/u/350475.aspx#") A站链接]
        a(href='http://www.acfun.cn/u/350475.aspx#', target='_blank')
    p 后端支持:
        a(href='mailto:quzhi65222714@gmail.com?Subject=屈直个人工具%20Support%20Request', target='_blank') 屈直

    // Scripts
    script(src='/javascripts/jquery-3.1.1.min.js')
    script(src='/javascripts/jquery-ui.js')
    script.
        // Read years
        var yearsJson = $('#yearsJson').text();
        var years = JSON.parse(yearsJson);
        // console.log(years)

        // Initialize
        var mapImg = $('.map');
        mapImg.attr('src', '/resources/map1/-2100.jpg');
        magnify("map", 5);

        // Slide bar
        $(function () {
            var slideBar = $('#slider-bar');
            var slideBarValue;
            slideBar.slider({
                range: "max",
                min: -2100,
                max: 2030,
                value: -2100,
                step: 0.5,
                slide: function (event, ui) {
                    // console.log(ui.value)
                    slideBarValue = slideBar.slider("value");

                    // Round value
                    var resultArray = [];
                    var maxDistance = 4017;
                    for (var i = 0; i < years.length; i++) {
                        var pureYear = years[i]
                            .replace('春', '')
                            .replace('夏', '')
                            .replace('秋', '')
                            .replace('冬', '')
                            .replace('月末', '');
                        var yearNum = parseInt(pureYear);
                        if (Math.abs(slideBarValue - yearNum) < maxDistance) {
                            maxDistance = Math.abs(slideBarValue - yearNum);
                            resultArray = [];
                            resultArray.push(years[i]);
                        } else if (Math.abs(slideBarValue - yearNum) === maxDistance) {
                            resultArray.push(years[i]);
                        }
                    }

                    // Chose graph
                    var graphName = resultArray[0]; // TODO: Determine real graph
                    var graphFile = '/resources/map1/' + graphName + '.jpg';
                    mapImg.attr('src', graphFile);
                    // console.log('Rendering ' + graphFile)
                    $("#amount").text('公元：' + graphName);
                }
            });

        });

        function magnify(imgID, zoom) {
            var img, glass, w, h, bw;
            img = document.getElementById(imgID);
            /*create magnifier glass:*/
            glass = document.createElement("DIV");
            glass.setAttribute("class", "img-magnifier-glass");
            /*insert magnifier glass:*/
            img.parentElement.insertBefore(glass, img);
            /*set background properties for the magnifier glass:*/
            glass.style.backgroundImage = "url('" + img.src + "')";
            glass.style.backgroundRepeat = "no-repeat";
            glass.style.backgroundSize = (img.width * zoom) + "px " + (img.height * zoom) + "px";
            bw = 3;
            w = glass.offsetWidth / 2;
            h = glass.offsetHeight / 2;
            /*execute a function when someone moves the magnifier glass over the image:*/
            glass.addEventListener("mousemove", moveMagnifier);
            img.addEventListener("mousemove", moveMagnifier);
            /*and also for touch screens:*/
            glass.addEventListener("touchmove", moveMagnifier);
            img.addEventListener("touchmove", moveMagnifier);

            function moveMagnifier(e) {
                var pos, x, y;
                /*prevent any other actions that may occur when moving over the image*/
                e.preventDefault();
                /*get the cursor's x and y positions:*/
                pos = getCursorPos(e);
                x = pos.x;
                y = pos.y;
                /*prevent the magnifier glass from being positioned outside the image:*/
                if (x > img.width - (w / zoom)) {
                    x = img.width - (w / zoom);
                }
                if (x < w / zoom) {
                    x = w / zoom;
                }
                if (y > img.height - (h / zoom)) {
                    y = img.height - (h / zoom);
                }
                if (y < h / zoom) {
                    y = h / zoom;
                }
                /*set the position of the magnifier glass:*/
                glass.style.left = (x - w) + "px";
                glass.style.top = (y - h) + "px";
                /*display what the magnifier glass "sees":*/
                glass.style.backgroundPosition = "-" + ((x * zoom) - w + bw) + "px -" + ((y * zoom) - h + bw) + "px";
            }

            function getCursorPos(e) {
                var a, x = 0, y = 0;
                e = e || window.event;
                /*get the x and y positions of the image:*/
                a = img.getBoundingClientRect();
                /*calculate the cursor's x and y coordinates, relative to the image:*/
                x = e.pageX - a.left;
                y = e.pageY - a.top;
                /*consider any page scrolling:*/
                x = x - window.pageXOffset;
                y = y - window.pageYOffset;
                return {x: x, y: y};
            }
        }
